<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Group - Documentation</title>

    <script src="scripts/prettify/prettify.js"></script>
    <script src="scripts/prettify/lang-css.js"></script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>
<body>

<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger" class="navicon-button x">
  <div class="navicon"></div>
</label>

<label for="nav-trigger" class="overlay"></label>

<nav>
    <li class="nav-link nav-home-link"><a href="index.html">Home</a></li><li class="nav-heading">Classes</li><li class="nav-heading"><span class="nav-item-type type-class">C</span><span class="nav-item-name"><a href="global.html#.allSprites">Group</a></span></li><li class="nav-heading"><span class="nav-item-type type-class">C</span><span class="nav-item-name"><a href="GroupSprite.html">GroupSprite</a></span></li><li class="nav-heading"><span class="nav-item-type type-class">C</span><span class="nav-item-name"><a href="Subgroup.html">Subgroup</a></span></li><li class="nav-heading"><a href="global.html">Globals</a></li><li class="nav-item"><span class="nav-item-type type-function">F</span><span class="nav-item-name"><a href="global.html#colorPal">colorPal</a></span></li><li class="nav-item"><span class="nav-item-type type-function">F</span><span class="nav-item-name"><a href="global.html#createTiles">createTiles</a></span></li><li class="nav-item"><span class="nav-item-type type-function">F</span><span class="nav-item-name"><a href="global.html#spriteArt">spriteArt</a></span></li>
</nav>

<div id="main">
    
    <h1 class="page-title">Group</h1>
    

    




<section>

<header>
    
        <h2>
        Group
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new Group<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/group.html">
Look at the Group reference pages before reading these docs.
</a>

A Group is a collection of sprites with similar traits and behaviors.

For example a group may contain all the coin sprites that the
player can collect.

Group extends Array. You can use them in for loops just like arrays
since they inherit all the functions and properties of standard
arrays such as `group.length` and functions like `group.includes()`.

Since groups just contain references to sprites, a sprite can be in
multiple groups.

`sprite.remove()` removes the sprite from all the groups
it belongs to. `group.removeAll()` removes all the sprites from
a group.

The top level group is a p5 instance level variable named
`allSprites` that contains all the sprites added to the sketch.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line4694">line 4694</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Array:<a href="global.html#.allSprites"></a>.&lt;Sprite:<a href="global.html#.allSprites"></a>></li>
    </ul>


    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        P5Play
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new P5Play<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    This class is deleted after it's used
to create the `p5play` object
which contains information about the sketch.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line60">line 60</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        Sprite
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new Sprite<span class="signature">(x<span class="signature-attributes">opt</span>, y<span class="signature-attributes">opt</span>, w<span class="signature-attributes">opt</span>, h<span class="signature-attributes">opt</span>, collider<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/sprite.html">
Look at the Sprite reference pages before reading these docs.
</a>

The Sprite constructor can be used in many different ways.

In fact it's so flexible that I've only listed out some of the
most common ways it can be used in the examples section below.
Try experimenting with it! It's likely to work the way you
expect it to, if not you'll just get an error.

Special feature! If the first parameter to this constructor is a
loaded p5.Image, SpriteAnimation, or name of a SpriteAnimation,
then the Sprite will be created with that animation. If the
dimensions of the sprite are not given, then the Sprite will be
created using the dimensions of the animation.

Every sprite you create is added to the `allSprites`
group and put on the top draw order layer, in front of all
previously created sprites.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line191">line 191</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                horizontal position of the sprite
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                vertical position of the sprite
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>w</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                width of the placeholder rectangle and of
the collider until an image or new collider are set. *OR* If height is not
set then this parameter becomes the diameter of the placeholder circle.
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>h</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                height of the placeholder rectangle and of the collider
until an image or new collider are set
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>collider</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>String</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                collider type is 'dynamic' by default, can be
'static', 'kinematic', or 'none'
                
            </td>
        </tr>

    
    </tbody>
</table>
















<div class="section-examples">
<h5>Example</h5>

    <pre class="prettyprint"><code>let spr = new Sprite();

let rectangle = new Sprite(x, y, width, height);

let circle = new Sprite(x, y, diameter);

let spr = new Sprite(aniName, x, y);

let line = new Sprite(x, y, [length, angle]);</code></pre>

</div>

</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        SpriteAnimation
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new SpriteAnimation<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/animation.html">
Look at the Animation reference pages before reading these docs.
</a>

A SpriteAnimation object contains a series of images (p5.Image objects)
that can be displayed sequentially.

A sprite can have multiple labeled animations, see Sprite.addAnimation
and Sprite.changeAnimation, but you can also create animations that
can be used without being added to a sprite first.

The SpriteAnimation constructor can be used in multiple ways.
An animation can be created either from a list of images or sequentially
numbered images. p5play will try to detect the sequence pattern.

For example if the image file path is "image1.png" and the last frame
index is 3 then "image2.png" and "image3.png" will be loaded as well.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line3870">line 3870</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>...images</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>p5.Image</code></span>


            
            </td>

            
                <td class="attributes">
                

                

                
                    &lt;repeatable><br>
                
                </td>
            

            

            <td class="description last">
                p5.Image objects to be used as frames
                
            </td>
        </tr>

    
    </tbody>
</table>
















<div class="section-examples">
<h5>Example</h5>

    <pre class="prettyprint"><code>let shapeShifter = new SpriteAnimation("dog.png", "cat.png", "snake.png");</code></pre>

</div>

</div>
    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Array:<a href="global.html#.allSprites"></a>.&lt;p5.Image:<a href="global.html#.allSprites"></a>></li>
    </ul>


    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        _Contros
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new _Contros<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/input.html">
Look at the Input reference pages before reading these docs.
</a>

Used to create `controllers` (aka `contro`) an array
of `_Contro` objects, which store the input status of buttons,
triggers, and sticks on game controllers.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line9635">line 9635</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Array:<a href="global.html#.allSprites"></a>.&lt;_Contro:<a href="global.html#.allSprites"></a>></li>
    </ul>


    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        Camera
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new Camera<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/camera.html">
Look at the Camera reference pages before reading these docs.
</a>

A `camera` object is created automatically when p5play loads.
Currently, there can only be one camera per p5.js instance.

A camera facilitates zooming and scrolling for scenes extending beyond
the canvas. Moving the camera does not actually move the sprites.

The camera is automatically created on the first draw cycle.

In p5.js terms the camera wraps the whole drawing cycle in a
transformation matrix but it can be disabled anytime during the draw
cycle to draw interface elements in an absolute position.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line6516">line 6516</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        Canvas
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new Canvas<span class="signature">(width, height, preset<span class="signature-attributes">opt</span>, renderer<span class="signature-attributes">opt</span>, options<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>

    



<div class="description">
    p5play adds some extra functionality to the p5.js `createCanvas`
function. See the examples below.

This function also disables the default keydown responses for
the arrow keys, slash, and space. This is to prevent the
browser from scrolling the page when the user is playing a game
using common keyboard commands.

Canvas options (context attributes) can only be utilized with
q5.js.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line8185">line 8185</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>width</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>height</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preset</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>String</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                'fullscreen' or 'pixelated'
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>renderer</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>String</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                '2d' (default) or 'webgl'
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Object</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                context attributes
                
            </td>
        </tr>

    
    </tbody>
</table>














<div class="section-returns">
<h5>Returns:</h5>

        


<div class="param-desc">
    HTML5 canvas element
</div>

    
</div>



<div class="section-examples">
<h5>Example</h5>

    <pre class="prettyprint"><code>// fills the window
new Canvas();
// max 16:9 aspect ratio dimensions that will fit the window
new Canvas('16:9');
// 800x600 pixels
new Canvas(800, 600);
// fullscreen scaling, fits window (no stretching)
new Canvas(800, 600, 'fullscreen');
// pixelated scaling, fits window (no stretching)
new Canvas(256, 240, 'pixelated');</code></pre>

</div>

</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        DistanceJoint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new DistanceJoint<span class="signature">(spriteA, spriteB)</span><span class="type-signature"></span></h4>

    



<div class="description">
    Distance joints are used to constrain the distance
between two sprites.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line7227">line 7227</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        GlueJoint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new GlueJoint<span class="signature">(spriteA, spriteB)</span><span class="type-signature"></span></h4>

    



<div class="description">
    Glue joints are used to glue two sprites together.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line7214">line 7214</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        HingeJoint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new HingeJoint<span class="signature">(spriteA, spriteB)</span><span class="type-signature"></span></h4>

    



<div class="description">
    Hinge joints attach two sprites together at a pivot point,
constraining them to rotate around this point, like a hinge.

A known as a revolute joint.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line7344">line 7344</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        InputDevice
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new InputDevice<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/input.html">
Look at the Input reference pages before reading these docs.
</a>

Root class for storing the state of inputs (mouse, keyboard,
gamepads).

-3 means input was pressed and released on the same frame
-2 means input was released after being held
-1 means input was released
0 means input is not pressed
1 means input was pressed
>1 means input is still being pressed
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line8727">line 8727</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        Joint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new Joint<span class="signature">(spriteA, spriteB, type<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>

    



<div class="description">
    Using this Joint class directly is not recommended, but
if it is used a GlueJoint will be created.

It's better to use a specific joint class constructor:

GlueJoint, DistanceJoint, WheelJoint, HingeJoint,
SliderJoint, or RopeJoint.

All other joint classes extend this class. Joint type
can not be changed after a joint is created.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line6888">line 6888</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>type</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>String</code></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        RopeJoint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new RopeJoint<span class="signature">(spriteA, spriteB)</span><span class="type-signature"></span></h4>

    



<div class="description">
    A Rope joint prevents two sprites from going further
than a certain distance from each other, which is
defined by the max length of the rope, but they do allow
the sprites to get closer together.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line7539">line 7539</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        SliderJoint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new SliderJoint<span class="signature">(spriteA, spriteB)</span><span class="type-signature"></span></h4>

    



<div class="description">
    A slider joint constrains the motion of two sprites to sliding
along a common axis, without rotation.

Also known as a prismatic joint.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line7441">line 7441</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        Tiles
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new Tiles<span class="signature">(tiles, x, y, w, h)</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/tiles.html">
Look at the Tiles reference pages before reading these docs.
</a>

Returns a group containing all the tile sprites created by
the `Tiles` constructor.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line6802">line 6802</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>tiles</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>String</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>w</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>h</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Number</code></span>


            
            </td>

            

            

            <td class="description last">
                
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        WheelJoint
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new WheelJoint<span class="signature">(spriteA, spriteB)</span><span class="type-signature"></span></h4>

    



<div class="description">
    Wheel joints can be used to create vehicles!

By default the motor is disabled, angle is 90 degrees,
maxPower is 1000, springiness is 0.1, and damping is 0.7.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line7270">line 7270</a>
    </li></ul></dd>
    

    

    

    
</dl>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>spriteA</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                the vehicle body
                
            </td>
        </tr>

    

        <tr>
            
                <td class="name"><code>spriteB</code></td>
            

            <td class="type">
            
                
<span class="param-type"><code>Sprite</code></span>


            
            </td>

            

            

            <td class="description last">
                the wheel
                
            </td>
        </tr>

    
    </tbody>
</table>
















</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        World
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new World<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/world.html">
Look at the World reference pages before reading these docs.
</a>

A `world` object is created automatically by p5play. There can only
be one world per p5.js instance.

This class extends `planck.World` and adds some p5play specific
features.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line6172">line 6172</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        _Contro
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new _Contro<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/input.html">
Look at the Input reference pages before reading these docs.
</a>

Used to create controller objects in the `controllers` array
(aka `contro`), these objects store the input status of buttons,
triggers, and sticks on game controllers.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line9483">line 9483</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        _Keyboard
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new _Keyboard<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/input.html">
Look at the Input reference pages before reading these docs.
</a>

Used to create the `kb` and `keyboard` objects, which store
the input status of keys on the keyboard.

Most key properties will be undefined until the key is pressed.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line9262">line 9262</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        _Mouse
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new _Mouse<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/input.html">
Look at the Input reference pages before reading these docs.
</a>

Used to create the `mouse` input object.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line8838">line 8838</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>







<section>

<header>
    
        <h2>
        _SpriteMouse
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
<div class="section-method">

    

    <h4 class="name" id=".allSprites"><span class="type-signature"></span>new _SpriteMouse<span class="signature">()</span><span class="type-signature"></span></h4>

    



<div class="description">
    <a href="https://p5play.org/learn/input.html">
Look at the Input reference pages before reading these docs.
</a>

Used to create `sprite.mouse` input objects.
</div>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="p5play.js.html">p5play.js</a>, <a href="p5play.js.html#line9039">line 9039</a>
    </li></ul></dd>
    

    

    

    
</dl>























</div>
    
    </div>

    

    

    

     

    

    

    

    

    
</article>

</section>




</div>

<br class="clear">

<footer>
    Generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 4.0.2</a> on Mon Jan 29 2024 16:05:55 GMT-0500 (Colombia Standard Time) using the Minami theme.
</footer>

<script>prettyPrint();</script>
<script src="scripts/linenumber.js"></script>
</body>
</html>